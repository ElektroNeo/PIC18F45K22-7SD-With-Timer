

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Aug 25 16:54:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELB	set	3897
    52  0000                     _INTCONbits	set	4082
    53  0000                     _ANSELD	set	3899
    54  0000                     _LATB	set	3978
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISD	set	3989
    57  0000                     _OSCTUNE	set	3995
    58  0000                     _OSCCON2	set	4050
    59  0000                     _OSCCON	set	4051
    60  0000                     _RCONbits	set	4048
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  0000'                    __pcinit:
    66                           	callstack 0
    67  0000'                    start_initialization:
    68                           	callstack 0
    69  0000'                    __initialization:
    70                           	callstack 0
    71  0000'                    end_of_initialization:
    72                           	callstack 0
    73  0000'                    __end_of__initialization:
    74                           	callstack 0
    75  0000' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  0002' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  0004' 0100               	movlb	0
    78  0006' EF00' F000'        	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81  0000'                    __pcstackCOMRAM:
    82                           	callstack 0
    83  0000'                    ??_interrupt_manager:
    84  0000'                    
    85                           ; 2 bytes @ 0x0
    86  0000'                    	ds	14
    87  000E'                    
    88                           ; 1 bytes @ 0xE
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 52 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  2   40[None  ] int 
   101 ;; Registers used:
   102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   108 ;;      Params:         0       0       0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called: 3
   114 ;; This function calls:
   115 ;;		_sev_seg_init
   116 ;;		_tmr0_init
   117 ;;		_tmr0_start
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  0000'                    __ptext0:
   125                           	callstack 0
   126  0000'                    _main:
   127                           	callstack 28
   128  0000'                    
   129                           ;main.c: 55:     OSCCON = 0x72;
   130  0000' 0E72               	movlw	114
   131  0002' 6ED3               	movwf	211,c	;volatile
   132                           
   133                           ;main.c: 57:     OSCCON2 = 0x04;
   134  0004' 0E04               	movlw	4
   135  0006' 6ED2               	movwf	210,c	;volatile
   136                           
   137                           ;main.c: 59:     OSCTUNE = 0x00;
   138  0008' 0E00               	movlw	0
   139  000A' 6E9B               	movwf	155,c	;volatile
   140  000C'                    
   141                           ;main.c: 61:     tmr0_init();
   142  000C' EC00' F000'        	call	_tmr0_init	;wreg free
   143  0010'                    
   144                           ;main.c: 62:     sev_seg_init();
   145  0010' EC00' F000'        	call	_sev_seg_init	;wreg free
   146  0014'                    
   147                           ;main.c: 63:     tmr0_start();
   148  0014' EC00' F000'        	call	_tmr0_start	;wreg free
   149  0018'                    
   150                           ;main.c: 66:     RCONbits.IPEN = 0;
   151  0018' 9ED0               	bcf	208,7,c	;volatile
   152  001A'                    
   153                           ;main.c: 67:     INTCONbits.PEIE = 1;
   154  001A' 8CF2               	bsf	242,6,c	;volatile
   155  001C'                    
   156                           ;main.c: 68:     INTCONbits.GIE = 1;
   157  001C' 8EF2               	bsf	242,7,c	;volatile
   158  001E'                    l41:
   159  001E' EF00' F000'        	goto	l41
   160  0022' EF00' F000'        	goto	start
   161  0026'                    __end_of_main:
   162                           	callstack 0
   163                           
   164 ;; *************** function _sev_seg_init *****************
   165 ;; Defined at:
   166 ;;		line 33 in file "main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   180 ;;      Params:         0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels used: 1
   186 ;; Hardware stack levels required when called: 2
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text1
   195  0000'                    __ptext1:
   196                           	callstack 0
   197  0000'                    _sev_seg_init:
   198                           	callstack 28
   199  0000'                    
   200                           ;main.c: 37:     ANSELB &= ~(0b00001111);
   201  0000' 0EF0               	movlw	240
   202  0002' 010F               	movlb	15	; () banked
   203  0004' 1739               	andwf	57,f,b	;volatile
   204  0006'                    
   205                           ; BSR set to: 15
   206                           ;main.c: 39:     ANSELD &= ~(0b11111111);
   207  0006' 0E00               	movlw	0
   208  0008' 6F3B               	movwf	59,b	;volatile
   209  000A'                    
   210                           ; BSR set to: 15
   211                           ;main.c: 41:     TRISB &= ~(0b00001111);
   212  000A' 0EF0               	movlw	240
   213  000C' 1693               	andwf	147,f,c	;volatile
   214                           
   215                           ;main.c: 43:     TRISD &= ~(0b11111111);
   216  000E' 0E00               	movlw	0
   217  0010' 6E95               	movwf	149,c	;volatile
   218  0012'                    
   219                           ; BSR set to: 15
   220                           ;main.c: 45:     LATB &= ~(0b00001111);
   221  0012' 0EF0               	movlw	240
   222  0014' 168A               	andwf	138,f,c	;volatile
   223  0016'                    
   224                           ; BSR set to: 15
   225                           ;main.c: 46:     LATB &= ~(0b11111111);
   226  0016' 0E00               	movlw	0
   227  0018' 6E8A               	movwf	138,c	;volatile
   228  001A'                    
   229                           ; BSR set to: 15
   230  001A' 0012               	return		;funcret
   231  001C'                    __end_of_sev_seg_init:
   232                           	callstack 0
   233                           
   234 ;; *************** function _interrupt_manager *****************
   235 ;; Defined at:
   236 ;;		line 11 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   250 ;;      Params:         0       0       0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0
   252 ;;      Temps:         14       0       0       0       0       0       0
   253 ;;      Totals:        14       0       0       0       0       0       0
   254 ;;Total ram usage:       14 bytes
   255 ;; Hardware stack levels used: 1
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_tmr0_isr
   259 ;; This function is called by:
   260 ;;		Interrupt level 2
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	intcode
   265  0000'                    __pintcode:
   266                           	callstack 0
   267  0000'                    _interrupt_manager:
   268                           	callstack 28
   269                           
   270                           ; BSR set to: 15
   271                           ;incstack = 0
   272  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   273  0002' CFFA F000'         	movff	pclath,??_interrupt_manager
   274  0006' CFFB F001'         	movff	pclatu,??_interrupt_manager+1
   275  000A' CFE9 F002'         	movff	fsr0l,??_interrupt_manager+2
   276  000E' CFEA F003'         	movff	fsr0h,??_interrupt_manager+3
   277  0012' CFE1 F004'         	movff	fsr1l,??_interrupt_manager+4
   278  0016' CFE2 F005'         	movff	fsr1h,??_interrupt_manager+5
   279  001A' CFD9 F006'         	movff	fsr2l,??_interrupt_manager+6
   280  001E' CFDA F007'         	movff	fsr2h,??_interrupt_manager+7
   281  0022' CFF3 F008'         	movff	prodl,??_interrupt_manager+8
   282  0026' CFF4 F009'         	movff	prodh,??_interrupt_manager+9
   283  002A' CFF6 F00A'         	movff	tblptrl,??_interrupt_manager+10
   284  002E' CFF7 F00B'         	movff	tblptrh,??_interrupt_manager+11
   285  0032' CFF8 F00C'         	movff	tblptru,??_interrupt_manager+12
   286  0036' CFF5 F00D'         	movff	tablat,??_interrupt_manager+13
   287  003A'                    
   288                           ;main.c: 14:     if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   289  003A' AAF2               	btfss	242,5,c	;volatile
   290  003C' EF00' F000'        	goto	i2u1_41
   291  0040' EF00' F000'        	goto	i2u1_40
   292  0044'                    i2u1_41:
   293  0044' EF00' F000'        	goto	i2l33
   294  0048'                    i2u1_40:
   295  0048' A4F2               	btfss	242,2,c	;volatile
   296  004A' EF00' F000'        	goto	i2u2_41
   297  004E' EF00' F000'        	goto	i2u2_40
   298  0052'                    i2u2_41:
   299  0052' EF00' F000'        	goto	i2l33
   300  0056'                    i2u2_40:
   301  0056'                    
   302                           ;main.c: 15:     {;main.c: 16:         tmr0_isr();
   303  0056' EC00' F000'        	call	_tmr0_isr	;wreg free
   304  005A'                    i2l33:
   305  005A' C00D' FFF5         	movff	??_interrupt_manager+13,tablat
   306  005E' C00C' FFF8         	movff	??_interrupt_manager+12,tblptru
   307  0062' C00B' FFF7         	movff	??_interrupt_manager+11,tblptrh
   308  0066' C00A' FFF6         	movff	??_interrupt_manager+10,tblptrl
   309  006A' C009' FFF4         	movff	??_interrupt_manager+9,prodh
   310  006E' C008' FFF3         	movff	??_interrupt_manager+8,prodl
   311  0072' C007' FFDA         	movff	??_interrupt_manager+7,fsr2h
   312  0076' C006' FFD9         	movff	??_interrupt_manager+6,fsr2l
   313  007A' C005' FFE2         	movff	??_interrupt_manager+5,fsr1h
   314  007E' C004' FFE1         	movff	??_interrupt_manager+4,fsr1l
   315  0082' C003' FFEA         	movff	??_interrupt_manager+3,fsr0h
   316  0086' C002' FFE9         	movff	??_interrupt_manager+2,fsr0l
   317  008A' C001' FFFB         	movff	??_interrupt_manager+1,pclatu
   318  008E' C000' FFFA         	movff	??_interrupt_manager,pclath
   319  0092' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   320  0094' 0011               	retfie		f
   321  0096'                    __end_of_interrupt_manager:
   322                           	callstack 0
   323  0000                     
   324                           	psect	rparam
   325  0000                     
   326                           	psect	temp
   327  0000'                    btemp:
   328                           	callstack 0
   329  0000'                    	ds	1
   330  0000                     int$flags	set	btemp
   331  0000                     wtemp8	set	btemp+1
   332  0000                     ttemp5	set	btemp+1
   333  0000                     ttemp6	set	btemp+4
   334  0000                     ttemp7	set	btemp+8
   335                           
   336                           	psect	idloc
   337                           
   338                           ;Config register IDLOC0 @ 0x200000
   339                           ;	unspecified, using default values
   340  200000                     	org	2097152
   341  200000  FF                 	db	255
   342                           
   343                           ;Config register IDLOC1 @ 0x200001
   344                           ;	unspecified, using default values
   345  200001                     	org	2097153
   346  200001  FF                 	db	255
   347                           
   348                           ;Config register IDLOC2 @ 0x200002
   349                           ;	unspecified, using default values
   350  200002                     	org	2097154
   351  200002  FF                 	db	255
   352                           
   353                           ;Config register IDLOC3 @ 0x200003
   354                           ;	unspecified, using default values
   355  200003                     	org	2097155
   356  200003  FF                 	db	255
   357                           
   358                           ;Config register IDLOC4 @ 0x200004
   359                           ;	unspecified, using default values
   360  200004                     	org	2097156
   361  200004  FF                 	db	255
   362                           
   363                           ;Config register IDLOC5 @ 0x200005
   364                           ;	unspecified, using default values
   365  200005                     	org	2097157
   366  200005  FF                 	db	255
   367                           
   368                           ;Config register IDLOC6 @ 0x200006
   369                           ;	unspecified, using default values
   370  200006                     	org	2097158
   371  200006  FF                 	db	255
   372                           
   373                           ;Config register IDLOC7 @ 0x200007
   374                           ;	unspecified, using default values
   375  200007                     	org	2097159
   376  200007  FF                 	db	255
   377                           
   378                           	psect	config
   379                           
   380                           ; Padding undefined space
   381  300000                     	org	3145728
   382  300000  FF                 	db	255
   383                           
   384                           ;Config register CONFIG1H @ 0x300001
   385                           ;	Oscillator Selection bits
   386                           ;	FOSC = INTIO67, Internal oscillator block
   387                           ;	4X PLL Enable
   388                           ;	PLLCFG = OFF, Oscillator used directly
   389                           ;	Primary clock enable bit
   390                           ;	PRICLKEN = ON, Primary clock is always enabled
   391                           ;	Fail-Safe Clock Monitor Enable bit
   392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   393                           ;	Internal/External Oscillator Switchover bit
   394                           ;	IESO = OFF, Oscillator Switchover mode disabled
   395  300001                     	org	3145729
   396  300001  28                 	db	40
   397                           
   398                           ;Config register CONFIG2L @ 0x300002
   399                           ;	Power-up Timer Enable bit
   400                           ;	PWRTEN = OFF, Power up timer disabled
   401                           ;	Brown-out Reset Enable bits
   402                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   403                           ;	Brown Out Reset Voltage bits
   404                           ;	BORV = 190, VBOR set to 1.90 V nominal
   405  300002                     	org	3145730
   406  300002  1F                 	db	31
   407                           
   408                           ;Config register CONFIG2H @ 0x300003
   409                           ;	Watchdog Timer Enable bits
   410                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   411                           ;	Watchdog Timer Postscale Select bits
   412                           ;	WDTPS = 32768, 1:32768
   413  300003                     	org	3145731
   414  300003  3C                 	db	60
   415                           
   416                           ; Padding undefined space
   417  300004                     	org	3145732
   418  300004  FF                 	db	255
   419                           
   420                           ;Config register CONFIG3H @ 0x300005
   421                           ;	CCP2 MUX bit
   422                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   423                           ;	PORTB A/D Enable bit
   424                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   425                           ;	P3A/CCP3 Mux bit
   426                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   427                           ;	HFINTOSC Fast Start-up
   428                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   429                           ;	Timer3 Clock input mux bit
   430                           ;	T3CMX = PORTC0, T3CKI is on RC0
   431                           ;	ECCP2 B output mux bit
   432                           ;	P2BMX = PORTD2, P2B is on RD2
   433                           ;	MCLR Pin Enable bit
   434                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   435  300005                     	org	3145733
   436  300005  BD                 	db	189
   437                           
   438                           ;Config register CONFIG4L @ 0x300006
   439                           ;	Stack Full/Underflow Reset Enable bit
   440                           ;	STVREN = ON, Stack full/underflow will cause Reset
   441                           ;	Single-Supply ICSP Enable bit
   442                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   443                           ;	Extended Instruction Set Enable bit
   444                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   445                           ;	Background Debug
   446                           ;	DEBUG = 0x1, unprogrammed default
   447  300006                     	org	3145734
   448  300006  85                 	db	133
   449                           
   450                           ; Padding undefined space
   451  300007                     	org	3145735
   452  300007  FF                 	db	255
   453                           
   454                           ;Config register CONFIG5L @ 0x300008
   455                           ;	Code Protection Block 0
   456                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   457                           ;	Code Protection Block 1
   458                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   459                           ;	Code Protection Block 2
   460                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   461                           ;	Code Protection Block 3
   462                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   463  300008                     	org	3145736
   464  300008  0F                 	db	15
   465                           
   466                           ;Config register CONFIG5H @ 0x300009
   467                           ;	Boot Block Code Protection bit
   468                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   469                           ;	Data EEPROM Code Protection bit
   470                           ;	CPD = OFF, Data EEPROM not code-protected
   471  300009                     	org	3145737
   472  300009  C0                 	db	192
   473                           
   474                           ;Config register CONFIG6L @ 0x30000A
   475                           ;	Write Protection Block 0
   476                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   477                           ;	Write Protection Block 1
   478                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   479                           ;	Write Protection Block 2
   480                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   481                           ;	Write Protection Block 3
   482                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   483  30000A                     	org	3145738
   484  30000A  0F                 	db	15
   485                           
   486                           ;Config register CONFIG6H @ 0x30000B
   487                           ;	Configuration Register Write Protection bit
   488                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   489                           ;	Boot Block Write Protection bit
   490                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   491                           ;	Data EEPROM Write Protection bit
   492                           ;	WRTD = OFF, Data EEPROM not write-protected
   493  30000B                     	org	3145739
   494  30000B  E0                 	db	224
   495                           
   496                           ;Config register CONFIG7L @ 0x30000C
   497                           ;	Table Read Protection Block 0
   498                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   499                           ;	Table Read Protection Block 1
   500                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   501                           ;	Table Read Protection Block 2
   502                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   503                           ;	Table Read Protection Block 3
   504                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   505  30000C                     	org	3145740
   506  30000C  0F                 	db	15
   507                           
   508                           ;Config register CONFIG7H @ 0x30000D
   509                           ;	Boot Block Table Read Protection bit
   510                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   511  30000D                     	org	3145741
   512  30000D  40                 	db	64
   513                           tosu	equ	0xFFF
   514                           tosh	equ	0xFFE
   515                           tosl	equ	0xFFD
   516                           stkptr	equ	0xFFC
   517                           pclatu	equ	0xFFB
   518                           pclath	equ	0xFFA
   519                           pcl	equ	0xFF9
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           prodh	equ	0xFF4
   525                           prodl	equ	0xFF3
   526                           indf0	equ	0xFEF
   527                           postinc0	equ	0xFEE
   528                           postdec0	equ	0xFED
   529                           preinc0	equ	0xFEC
   530                           plusw0	equ	0xFEB
   531                           fsr0h	equ	0xFEA
   532                           fsr0l	equ	0xFE9
   533                           wreg	equ	0xFE8
   534                           indf1	equ	0xFE7
   535                           postinc1	equ	0xFE6
   536                           postdec1	equ	0xFE5
   537                           preinc1	equ	0xFE4
   538                           plusw1	equ	0xFE3
   539                           fsr1h	equ	0xFE2
   540                           fsr1l	equ	0xFE1
   541                           bsr	equ	0xFE0
   542                           indf2	equ	0xFDF
   543                           postinc2	equ	0xFDE
   544                           postdec2	equ	0xFDD
   545                           preinc2	equ	0xFDC
   546                           plusw2	equ	0xFDB
   547                           fsr2h	equ	0xFDA
   548                           fsr2l	equ	0xFD9
   549                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_manager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_manager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _sev_seg_init
                          _tmr0_init
                         _tmr0_start
 ---------------------------------------------------------------------------------
 (1) _tmr0_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sev_seg_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interrupt_manager                                   14    14      0       0
                                              0 COMRAM    14    14      0
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (3) _tmr0_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sev_seg_init
   _tmr0_init
   _tmr0_start

 _interrupt_manager (ROOT)
   _tmr0_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      E       E       1       14.9%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBIGSFRh           D      0       0      15        0.0%
BITBIGSFRlhhhhh     1E      0       0      16        0.0%
BITBIGSFRlhhhhl      1      0       0      17        0.0%
BITBIGSFRlhhhhl     34      0       0      18        0.0%
BITBIGSFRlhhhhl      5      0       0      19        0.0%
BITBIGSFRlhhhl       1      0       0      20        0.0%
BITBIGSFRlhhlh       8      0       0      21        0.0%
BITBIGSFRlhhll      4E      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BITBIGSFRll          1      0       0      24        0.0%
ABS                  0      0       0      25        0.0%
BIGRAM             5FF      0       0      26        0.0%
DATA                 0      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Aug 25 16:54:40 2022

                       l41 00001E                         l42 00001E                         l36 00001A  
                      l720 000000                        l722 000006                        l724 00000A  
                      l740 000010                        l726 000012                        l742 000014  
                      l728 000016                        l744 000018                        l736 000000  
                      l746 00001A                        l738 00000C                        l748 00001C  
                     _LATB 000F8A                       i2l33 00005A                       _main 000000  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr2h 000FDA  
                     fsr0l 000FE9                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 000000                       prodh 000FF4                       prodl 000FF3  
                     start 000000*              ___param_bank 000000                      ?_main 000000  
                    i2l730 00003A                      i2l732 000048                      i2l734 000056  
                    _TRISB 000F93                      _TRISD 000F95                      pclath 000FFA  
                    pclatu 000FFB                      tablat 000FF5                      ttemp5 000001  
                    ttemp6 000004                      ttemp7 000008                      wtemp8 000001  
          __initialization 000000               __end_of_main 000026                     ??_main 00000E  
            __activetblptr 000000                     _ANSELB 000F39                     _ANSELD 000F3B  
                   _OSCCON 000FD3                     i2u1_40 000048                     i2u1_41 000044  
                   i2u2_40 000056                     i2u2_41 000052                     isa$std 000001  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 000000*   __end_of__initialization 000000              ___rparam_used 000001  
           __pcstackCOMRAM 000000                    _OSCCON2 000FD2                    _OSCTUNE 000F9B  
                ?_tmr0_isr 000000                    __Hparam 000000                    __Lparam 000000  
                  __pcinit 000000                    __ramtop 000000*                   __ptext0 000000  
                  __ptext1 000000              ?_sev_seg_init 000000       end_of_initialization 000000  
               _tmr0_start 000000*                ??_tmr0_isr 000000             ??_sev_seg_init 00000E  
      start_initialization 000000                ?_tmr0_start 000000       __end_of_sev_seg_init 00001C  
                __pintcode 000000          _interrupt_manager 000000         ?_interrupt_manager 000000  
      ??_interrupt_manager 000000                  _tmr0_init 000000*                  _RCONbits 000FD0  
__end_of_interrupt_manager 000096                 ?_tmr0_init 000000                   __Hrparam 000000* 
                 __Lrparam 000000*              ??_tmr0_start 000000                   _tmr0_isr 000000* 
                 isa$xinst 000000                   int$flags 000000               _sev_seg_init 000000  
               _INTCONbits 000FF2                   intlevel2 000000*               ??_tmr0_init 000000  
